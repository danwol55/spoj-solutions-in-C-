#include <iostream>
#include <string>
#include <queue>

using namespace std;

int main()
{
    string text;
    string text1="";
    int width;
    cin>>width;

    while(getline(cin, text))
    {
        string word="";
        int line_length = 0;
        for(int i=0; i<text.length(); i++)
        {
            if(text[i]!=32 && text[i]!=48)
            {
                word+=text[i];
            }
            else //dodaj wyraz do zdania
            {
                if(word.length()<=width-line_length)
                {
                    if(word.length()==width-line_length)
                    {
                        text1+=(word+(char)10);
                        line_length = 0;
                        word = "";
                    }
                    else if(word.length()+1<=width-line_length)
                    {
                        text1+=(word+(char)32);
                        line_length+=word.length()+1;
                        word="";
                    }
                }

                else//podziel wyraz
                {

                    if(word.length()<5)
                    {
                        text1 += "\n";
                        line_length = 0;
                        text1 += (word+(char)32);
                        line_length += word.length()+1;
                    }
                    else
                    {
                        if(width-line_length<4)
                        {
                            text1 += "\n";
                            line_length = 0;
                            if(word.length()<width)
                            {
                                text1 += (word+(char)32);
                                line_length += word.length()+1;
                                word="";
                            }
                            else
                                goto divide_word;
                        }
                        else
                        {

                            divide_word:
                            string word1="";
                            int rem_word_len;
                            queue<string>queue1;
                            bool add_two_letter = false;
                            for(int i1=0; i1<word.length(); i1++)
                            {
                                if(i1<3)
                                {
                                    if(i1==2)
                                    {
                                        word1+=word[i1];
                                        queue1.push(word1);
                                        rem_word_len = word.length() - (i1+1);
                                        if(rem_word_len == 2 || rem_word_len == 4)
                                        {
                                            add_two_letter = true;
                                        }
                                        word1 = "";
                                        continue;
                                    }
                                    word1+=word[i1];

                                }
                                else
                                {
                                    word1+=word[i1];
                                    if(add_two_letter)
                                    {
                                        if(word1.length()==2)
                                        {
                                            queue1.push(word1);
                                            word1="";
                                        }
                                    }
                                    else if(!add_two_letter)
                                    {
                                        if(word1.length()==3)
                                        {
                                            queue1.push(word1);
                                            rem_word_len = word.length() - (i1+1);
                                            if(rem_word_len == 2 || rem_word_len == 4)
                                            {
                                                add_two_letter = true;
                                            }
                                            word1="";
                                        }
                                    }
                                }

                            }

                            int rem_line_len;
                            rem_line_len = width - line_length;

                            string wordA, wordB;
                            while(queue1.size()>0)
                            {

                                wordA = queue1.front();
                                queue1.pop();

                                if(queue1.size()>0)
                                {
                                    wordB = queue1.front();
                                    if(wordA.length()+wordB.length()>rem_line_len)
                                    {
                                        if(wordA.length()+1<=rem_line_len)
                                        {
                                            text1+=wordA+"-";
                                            text1+="\n";
                                            line_length=0;
                                            rem_line_len=width;
                                        }
                                        else
                                        {
                                            text1+="\n";
                                            line_length=0;
                                            rem_line_len=width;
                                            text1+=wordA;
                                            line_length+=wordA.length();
                                            rem_line_len-=wordA.length();
                                        }
                                    }
                                    else if(wordA.length()+wordB.length()==rem_line_len)
                                    {
                                        if(queue1.size()==1)
                                        {
                                            text1+=wordA;
                                            line_length+=wordA.length();
                                            rem_line_len-=wordA.length();
                                        }
                                        else
                                        {
                                            text1+=wordA+"-";
                                            text1+="\n";
                                            line_length=0;
                                            rem_line_len=width;

                                        }
                                    }
                                    else
                                    {
                                        text1+=wordA;
                                        line_length+=wordA.length();
                                        rem_line_len-=wordA.length();
                                    }
                                }
                                else
                                {
                                    if(wordA.length()<=rem_line_len)
                                    {
                                        if(wordA.length()==rem_line_len)
                                        {
                                            text1+=(wordA+(char)10);
                                            line_length=0;
                                            rem_line_len=width;
                                        }
                                        else if(wordA.length()<rem_line_len)
                                        {
                                            text1+=(wordA+(char)32);
                                            line_length+=wordA.length()+1;
                                            rem_line_len-=wordA.length()+1;
                                        }
                                    }
                                }
                            }
                            word="";

                        }
                    }
                }
            }
        }
    }
    cout<<text1<<endl;



    return 0;
}
